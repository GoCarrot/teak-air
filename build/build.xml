<?xml version="1.0" encoding="UTF-8"?>
<project name="Air Native Extension Build Scripts" default="all">

    <!-- Config -->
    <property file="build.config"/>
    <property file="../native.config"/>
    <property environment="env"/>

    <loadfile property="sdk.version" srcFile="../VERSION"/>

    <exec executable="bash">
        <arg value="-c"/>
        <arg value="cat ../VERSION | sed 's/\([0-9,\.]*\).*/\1/'"/>
        <redirector outputproperty="sdk.airversion"/>
    </exec>

    <!-- All -->
    <target name="all" depends="ios_download,ios,android_download,android_firebase,android,swc,package" description="Full build of extension"/>
    <target name="local" depends="ios_copy,ios,android_copy,android_firebase,android,swc,package" description="Full build of extension"/>
    <target name="ios_local" depends="ios_copy,ios,android_download,android_firebase,android,swc,package" description="Full build of extension"/>
    <target name="android_local" depends="ios_download,ios,android_copy,android_firebase,android,swc,package" description="Full build of extension"/>

    <!-- iOS -->
    <property name="ios.temp.path" location="../temp/ios/build/"/>

    <target name="ios_copy">
        <delete dir="${ios.temp.path}"/>
        <mkdir dir="${ios.temp.path}"/>

        <copy file="../../teak-ios/build/Release-iphoneos/Teak.framework.zip" tofile="${ios.temp.path}/Teak.framework.zip" overwrite="true"/>
    </target>

    <target name="ios_download">
        <delete dir="${ios.temp.path}"/>
        <mkdir dir="${ios.temp.path}"/>

        <exec executable="curl" failonerror="true" dir="${ios.temp.path}">
            <arg line="-o Teak.framework.zip"/>
            <arg line="https://sdks.teakcdn.com/ios/Teak-${version.ios}.framework.zip"/>
        </exec>
    </target>

    <target name="ios" description="Build iOS Library">
        <!-- unzip task does not seem to keep simlinks, do it with exec instead -->
        <exec executable="unzip" failonerror="true" dir="${ios.temp.path}">
            <arg line="Teak.framework.zip"/>
        </exec>

        <copy file="${ios.temp.path}/Teak.framework/Teak" tofile="${ios.temp.path}/libTeak.a" overwrite="true"/>

        <exec executable="xcodebuild" failonerror="true" dir="../ios/">
            <arg line="-project ${name}Air.xcodeproj"/>
            <arg line="-alltargets clean"/>
        </exec>

        <exec executable="git" failonerror="true" dir="..">
            <arg line='describe'/>
            <arg line='--tags'/>
            <redirector outputproperty="sdk.gitversion"/>
        </exec>

        <delete dir="../ios/build"/>

        <exec executable="xcodebuild" failonerror="true" dir="../ios/">
            <arg line="-project ${name}Air.xcodeproj"/>
            <arg line="-sdk ${ios.sdkversion}"/>
            <arg line="-scheme ${name}Air"/>
            <arg line="-configuration Release"/>
            <arg line="CONFIGURATION_BUILD_DIR=${ios.temp.path}"/>
            <arg line="OTHER_CFLAGS=&quot;-fembed-bitcode&quot;"/>
            <arg line="GCC_PREPROCESSOR_DEFINITIONS='$GCC_PREPROCESSOR_DEFINITIONS TEAK_VERSION=@\&quot;${sdk.gitversion}\&quot;'"/>
        </exec>

        <exec executable="sh" failonerror="true" dir="../ios/">
            <arg line="lib_merge.sh"/>
            <arg line="${ios.temp.path}"/>
        </exec>

        <copy file="${ios.temp.path}/lib${name}AirMerged.a" todir="../temp/ios" overwrite="true"/>
        <delete dir="${ios.temp.path}"/>
    </target>

    <!-- Android -->
    <target name="android_copy">
        <delete dir="../android/temp"/>
        <mkdir dir="../android/temp/classes"/>

        <copy file="../../teak-android/build/distributions/teak-debug.zip"
              tofile="../android/temp/teak.zip" overwrite="true"/>
    </target>

    <target name="android_download">
        <delete dir="../android/temp"/>
        <mkdir dir="../android/temp/classes"/>

        <exec executable="curl" failonerror="true" dir="../android/temp">
            <arg line="-o teak.zip"/>
            <arg line="https://sdks.teakcdn.com/android/teak-${version.android}.zip"/>
        </exec>
    </target>

    <target name="android_firebase">
        <delete dir="../android/firebase"/>
        <mkdir dir="../android/firebase/zip"/>

        <exec executable="curl" failonerror="true" dir="../android/firebase">
            <arg line="-o firebase-jobdispatcher-with-gcm-dep-${version.firebase.jobdispatcher}.aar"/>
            <arg line="https://dl.bintray.com/firebase/firebase-jobdispatcher/com/firebase/firebase-jobdispatcher-with-gcm-dep/${version.firebase.jobdispatcher}/firebase-jobdispatcher-with-gcm-dep-${version.firebase.jobdispatcher}.aar"/>
        </exec>

        <unzip src="../android/firebase/firebase-jobdispatcher-with-gcm-dep-${version.firebase.jobdispatcher}.aar" dest="../android/firebase"/>
        <unzip src="../android/firebase/classes.jar" dest="../android/firebase/zip"/>
    </target>

    <target name="android" description="Build Android Library">
        <unzip src="../android/temp/teak.zip" dest="../android/temp"/>

        <copy file="../android/teak_air_version.xml.template"
              tofile="../temp/android/res/values/teak_air_version.xml" overwrite="true"/>
        <exec executable="git" failonerror="true" dir="..">
            <arg line='describe'/>
            <arg line='--tags'/>
            <redirector outputproperty="sdk.gitversion"/>
        </exec>
        <replace file="../temp/android/res/values/teak_air_version.xml"
                 token="@@@" value="${sdk.gitversion}"/>

        <copy todir="../temp/android/res/">
            <fileset dir="../android/temp/res"/>
        </copy>

        <mkdir dir="../android/temp/zip"/>
        <unzip src="../android/temp/teak/teak.jar" dest="../android/temp/zip"/>
        <copy todir="../android/temp/classes/io">
            <fileset dir="../android/temp/zip/io">
                <exclude name="**/R.class"/>
                <exclude name="**/R$*.class"/>
            </fileset>
        </copy>

        <copy todir="../android/temp/classes/com">
            <fileset dir="../android/firebase/zip/com">
                <include name="**/*.class"/>
            </fileset>
        </copy>

        <mkdir dir="../temp/android/"/>
        <jar basedir="../android/temp/classes" destfile="../temp/android/lib${name}Air.jar"/>
    </target>

    <!-- Actionscript -->
    <target name="swc" description="Build SWC library">
        <mkdir dir="../temp/swc/content/"/>

        <fileset dir="../actionscript/src" casesensitive="yes" id="classfiles">
            <include name="**/*.as"/>
        </fileset>

        <pathconvert property="classlist" refid="classfiles" pathsep=" " dirsep=".">
            <regexpmapper from=".*src.(.*)\.as" to="\1"/>
        </pathconvert>

        <!-- Create symlink so we don't get random failures -->
        <exec executable="readlink" outputproperty="air.location">
            <arg line="${env.ADOBE_AIR_HOME}"/>
        </exec>
        <basename property="air.version" file="${air.location}"/>
        <mkdir dir="${env.ADOBE_AIR_HOME}/frameworks/libs/player/11.1/"/>
        <symlink overwrite="true"
            link="${env.ADOBE_AIR_HOME}/frameworks/libs/player/11.1/playerglobal.swc"
            resource="${env.ADOBE_AIR_HOME}/frameworks/libs/player/${air.version}/playerglobal.swc" />

        <exec executable="${env.ADOBE_AIR_HOME}/bin/compc" failonerror="true">
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-output ../temp/swc/${name}.swc'/>
            <arg line='-swf-version=14'/>
            <arg line='-external-library-path+="${env.ADOBE_AIR_HOME}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist}'/>
        </exec>

        <!-- Clean up symlink -->
        <delete dir="${env.ADOBE_AIR_HOME}/frameworks/libs/player/11.1/"/>

        <unzip src="../temp/swc/${name}.swc" dest="../temp/swc/content" overwrite="true"/>
        <copy file="../temp/swc/content/library.swf" todir="../temp/ios" overwrite="true"/>
        <copy file="../temp/swc/content/library.swf" todir="../temp/android" overwrite="true"/>
        <copy file="../temp/swc/content/library.swf" todir="../temp/default" overwrite="true"/>
        <delete dir="../temp/swc/content/"/>
    </target>

    <!-- Package -->
    <target name="package" description="Create the extension package">
        <copy file="../build/extension.xml.template" tofile="../build/extension.xml" overwrite="true"/>
        <replace file="../build/extension.xml" token="@@@" value="${sdk.airversion}"/>

        <exec executable="${env.ADOBE_AIR_HOME}/bin/adt" failonerror="true" dir="../temp">
            <arg value="-package"/>
            <arg value="-target"/>
            <arg value="ane"/>
            <arg value="io.teak.sdk.${name}.ane"/>
            <arg value="../build/extension.xml"/>
            <arg line="-swc swc/${name}.swc"/>
            <arg line="-platform iPhone-ARM -platformoptions ../ios/platform.xml -C ios/ ."/>
            <arg line="-platform Android-ARM -platformoptions ../android/platform.xml -C android/ ."/>
            <arg line="-platform Android-ARM64 -platformoptions ../android/platform.xml -C android/ ."/>
            <arg line="-platform default -C default/ ."/>
        </exec>

        <move file="../temp/io.teak.sdk.${name}.ane" todir="../bin"/>
        <delete dir="../temp"/>
    </target>

    <!-- HTML Documentation (must be run manually) -->
    <target name="asdoc" description="generate the asdoc in readable html">
        <exec executable="${env.ADOBE_AIR_HOME}/bin/asdoc" failonerror="true">
            <env key="FLEX_HOME" value="${env.ADOBE_AIR_HOME}"/>
            <env key="FALCON_HOME" value="${env.ADOBE_AIR_HOME}"/>
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-doc-sources ../actionscript/src'/>
            <arg line='-output ../docs'/>
            <arg line='-library-path+="${env.ADOBE_AIR_HOME}/frameworks/libs/air/airglobal.swc"'/>
        </exec>
    </target>

</project>
