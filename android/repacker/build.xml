<?xml version="1.0" encoding="UTF-8"?>
<project name="Teak APK repacker for Adobe AIR" default="debug">
    <property file="build.config"/>

    <property name="temp.path" location="./_apktemp"/>
    <property name="temp.apk" location="./_temp.apk"/>

    <property name="signjar.sigalg" value="SHA1withRSA"/>
    <property name="signjar.digestalg" value="SHA1"/>

    <target name="debug" depends="unpack,patch,copy_res,repack,debug_sign,zipalign" description="Prepare APK for debug distribution."/>

    <target name="release" depends="unpack,patch,copy_res,repack,release_sign,zipalign" description="Prepare APK for debug distribution."/>

    <target name="unpack" description="Unpack APK file.">
        <java jar="apktool_2.1.0.jar" fork="true" failonerror="true">
            <arg value="d"/>
            <arg value="-f"/>
            <arg value="-o"/>
            <arg value="${temp.path}"/>
            <arg value="${input.apk}"/>
        </java>
    </target>

    <target name="patch" description="Patch the AppEntry.smali file to call Teak.">
        <xmlproperty file="${temp.path}/AndroidManifest.xml" prefix="android" collapseAttributes="true"/>
        <loadresource property="temp.path.patch.destination">
            <string value="${android.manifest.package}" />
            <filterchain>
                <replaceregex pattern="\." replace="/" flags="g" />
             </filterchain>
        </loadresource>

        <exec dir="${temp.path}/smali/${temp.path.patch.destination}" executable="patch" input="TeakAppEntry.patch">
            <arg line="-p0"/>
        </exec>
    </target>

    <target name="copy_res" description="Add res/values/teak.xml to the APK.">
        <copy file="teak.xml.template" tofile="${temp.path}/res/values/teak.xml" overwrite="true"/>
        <replace file="${temp.path}/res/values/teak.xml" token="@TeakAppId@" value="${teak.app_id}"/>
        <replace file="${temp.path}/res/values/teak.xml" token="@TeakApiKey@" value="${teak.api_key}"/>
        <replace file="${temp.path}/res/values/teak.xml" token="@TeakGcmSenderId@" value="${teak.gcm_sender_id}"/>
    </target>

    <target name="repack" description="Repack APK file.">
        <java jar="apktool_2.1.0.jar" fork="true" failonerror="true">
            <arg value="b"/>
            <arg value="-o"/>
            <arg value="${temp.apk}"/>
            <arg value="${temp.path}"/>
        </java>
    </target>

    <target name="debug_sign" description="Sign APK file with debug credentials.">
        <signjar jar="${temp.apk}"
                 storetype="${debug.storetype}"
                 sigalg="${signjar.sigalg}"
                 digestalg="${signjar.digestalg}"
                 keystore="${debug.keystore}"
                 storepass="${debug.keypass}"
                 alias="${debug.alias}"/>
    </target>

    <target name="release_sign" description="Sign APK file with release credentials.">
        <signjar jar="${temp.apk}"
                 storetype="${release.storetype}"
                 sigalg="${signjar.sigalg}"
                 digestalg="${signjar.digestalg}"
                 keystore="${release.keystore}"
                 storepass="${release.keypass}"
                 alias="${release.alias}"/>
    </target>

    <target name="zipalign" description="Zipalign final APK.">
        <condition property="android.zipalign.available">
            <and>
                <isset property="android.build-tools"/>
                <available file="${android.build-tools}/zipalign"/>
            </and>
        </condition>
        <antcall target="do-zipalign-if-available"/>
    </target>

    <target name="do-zipalign-if-available" if="android.zipalign.available">
        <exec executable="${android.build-tools}/zipalign">
            <arg line="-f"/>
            <arg line="-v"/>
            <arg line="4"/>
            <arg line="${temp.apk}"/>
            <arg line="${output.apk}"/>
        </exec>
    </target>

    <target name="clean" description="Clean temporary files and directories.">
        <delete dir="${temp.path}"/>
        <delete file="${temp.apk}"/>
    </target>

    <target name="install" description="Use ADB to install the APK on a connected device">
        <exec executable="${android.platform-tools}/adb">
            <arg line="install"/>
            <arg line="-r"/>
            <arg line="${output.apk}"/>
        </exec>
    </target>
</project>
