Amazon Device Messaging
=======================
.. highlight:: xml

Push Notifications on Amazon Devices
------------------------------------
Amazon devices do not support GCM/FCM and instead use Amazon's push notification service, ADM.

.. note:: Using ADM requires changes to the ``AndroidManifest.xml`` that are not supported by Adobe AIR, so you must un-pack, edit, re-pack and re-sign your APK after it has been generated by ``adt``.

Add Permissions and Teak Components to your AIR XML
---------------------------------------------------
Add the following to the ``<application>`` section::

    <permission
        android:name="YOUR_PACKAGE_NAME.permission.RECEIVE_ADM_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="YOUR_PACKAGE_NAME.permission.RECEIVE_ADM_MESSAGE" />
    <uses-permission android:name="com.amazon.device.messaging.permission.RECEIVE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!-- If you are using the Teak build scripts, uncomment the next line -->
    <!-- <service android:name="placeholder.enable.adm" /> -->

    <service android:name="io.teak.sdk.push.ADMPushProvider"
        android:exported="false" />
    <receiver
        android:name="io.teak.sdk.push.ADMPushProvider$MessageAlertReceiver"
        android:permission="com.amazon.device.messaging.permission.SEND" >
        <intent-filter>
            <action android:name="com.amazon.device.messaging.intent.REGISTRATION" />
            <action android:name="com.amazon.device.messaging.intent.RECEIVE" />
            <category android:name="YOUR_PACKAGE_NAME" />
        </intent-filter>
    </receiver>

.. note:: Replace ``YOUR_PACKAGE_NAME`` with the package name of your Android game. Make sure that for air games, you prefix the package name with "air" (if applicable to your game).

.. note:: If you are using the Teak re-pack scripts, uncomment the ``placeholder.enable.adm`` line.

Get your Amazon Credentials
---------------------------
ADM requires that you have an ``api_key.txt`` in the assets folder of your Android app.

In order to get your ``api_key.txt`` follow the instructions located here: https://developer.amazon.com/docs/adm/obtain-credentials.html

Add api_key.txt to your Assets
------------------------------
You can add ``api_key.txt`` to your APK in one of two ways:
* Copy it during the re-pack step
* Add it during build using ``adt``

To add ``api_key.txt`` during your build step with ``adt``, use the ``-C`` flag::

    -C src/assets api_key.txt

Editing the Contents of your APK
--------------------------------
At a high level, we use ``apktool`` to un-pack and re-pack the APK generated by ``adt``. You can get ``apktool`` here: https://ibotpeaches.github.io/Apktool/

.. note:: Teak has a set of scripts that can help with all of these steps, you can find it here: https://github.com/GoCarrot/teak-air/tree/master/android/repacker 
    
    Contact us for help with the script.

Un-packing your APK
-------------------
To un-pack an APK, use the following command::

    java -jar apktool_2.1.0.jar d --force --output <temp_path>

This will unpack the contents of the APK to ``<temp_path>``.

Add xmlns:amazon Property
-------------------------
At the top of your ``<temp_path>/AndroidManifest.xml`` you will see::

    <manifest xmlns:android="http://schemas.android.com/apk/res/android" [...] >

Add the ``xmlns:amazon`` property:: 

    <manifest xmlns:amazon="http://schemas.amazon.com/apk/res/android" xmlns:android="http://schemas.android.com/apk/res/android" [...] >

    <manifest xmlns:android="http://schemas.android.com/apk/res/android" [...] >

Add amazon:enable-feature Tag
-----------------------------
Enable ADM by adding this tag::

    <amazon:enable-feature android:name="com.amazon.device.messaging" android:required="false"/>

It should be located right above this::

    <service android:name="io.teak.sdk.push.ADMPushProvider" android:exported="false" />

Copy api_key.txt Into assets
----------------------------
Copy your ``api_key.txt`` to ``<temp_path>/assets/api_key.txt``

.. note:: You do not need to do this if you are adding ``api_key.txt`` during your ``adt`` build step.

Re-pack your APK
----------------
Re-pack your apk using ``apktool``::

    java -jar apktool_2.1.0.jar b --output output.apk <temp_path>

Sign and zipalign Your New APK
------------------------------
Follow these instructions to sign and ``zipalign`` the resulting APK: https://developer.android.com/studio/publish/app-signing#sign-manually
